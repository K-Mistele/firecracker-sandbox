#!/bin/bash 
# 
# This script performs basic configuration for firecracker.
FC_VERSION=v1.10.1
USER=$(whoami)

# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -euo pipefail


# install firecracker
install_firecracker() {
    curl -sSL https://github.com/firecracker-microvm/firecracker/releases/download/${FC_VERSION}/firecracker-${FC_VERSION}-x86_64.tgz | tar -xzv -C /usr/local/bin && \
    cd /usr/local/bin && \
    mv release-${FC_VERSION}-x86_64/firecracker-${FC_VERSION}-x86_64 firecracker && \
    rm -rf release-${FC_VERSION}-x86_64
}

# Check if the script is running as root, if not, re-run with sudo
check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        echo "This script requires root privileges for system configuration."
        echo "Re-running with sudo..."
        exec sudo "$0" "$@"
        # If exec fails, exit
        exit 1
    fi
}

# Check for root privileges before proceeding
install_firecracker

check_root "$@"



# ensure that KVM access is properly configured
if [ -e /dev/kvm ]; then
  echo "Configuring KVM access for $USER..."
  sudo usermod -aG kvm $USER
  sudo chmod 660 /dev/kvm
  sudo chown root:kvm /dev/kvm
else
  echo "KVM device not found. Is KVM enabled on this system?"
fi

# set process limits for the user
echo "Updating the hard and soft limits on process count for the user..."

## Check if the limits are already set for this user
if ! grep -q "$USER soft nproc 16384" /etc/security/limits.conf; then

### if not, add them to /etc/security/limits.conf
  echo "Adding process limits for $USER to /etc/security/limits.conf"
  tee -a /etc/security/limits.conf <<EOL
$USER soft nproc 16384
$USER hard nproc 16384
EOL
else
### otherwise, print a message indicating that limits are already set
  echo "Process limits for $USER already exist in /etc/security/limits.conf"
fi

# install dependencies
echo "Installing python3 and iperf3 dependencies..."
apt-get update && apt-get install -y --no-install-recommends \
    python3 e2tools curl ca-certificates iproute2 iptables

# For Docker /proc/sys/net/ipv4/ip_forward should already be 1, because Docker
# uses IPv4 forwarding itself. If this isn't set, restarting Docker on host
# should fix. sudo service restart docker or sudo systemctl restart docker
# should work. It can also be set by running one of the following commands
# sysctl -w net.ipv4.conf.all.forwarding=1
# sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
if [[ $(< /proc/sys/net/ipv4/ip_forward) != "1" ]]; then
    echo "WARNING: IPv4 forwarding is disabled. Networking will not work."
    exit 1
fi


# Add CAP_NET_ADMIN to firecracker (for TUNSETIFF ioctl)
setcap cap_net_admin=eip /usr/local/bin/firecracker